/**
 * GoCall library binding
 * flow
 */

import React, {Component, PureComponent, type ComponentType} from 'react';

import {
  View,
  NativeModules,
} from 'react-native';

import {
  branch,
  renderNothing,
} from 'recompose';

export function RenderWhenReady(fields) {
  return function(target) {
    return branch(
      (props) => {
        if (Array.isArray(fields)) {
          return !fields.reduce((acc, val) => acc && (props[val] !== undefined), true)
        }

        return props[fields] === undefined
      },
      renderNothing,
    )(target)
  }
}

import {
  cancelSubscriptionApiCall,
{{range $_, $item := .Functions}}
  {{ $item }}, {{end}}
{{range $_, $item := .Structures}}
  type {{ $item }}, {{end}}

} from './{{ .PackageName }}'

const emptyArray = []
